---
title: Hello, World!
description: "My first post"
date: 2025-01-01
tags: ["hello-world", "syntax"]
publish: true
---

Markdoc is a Markdown-based syntax and toolchain for creating custom documentation sites. Stripe created Markdoc to power [our public docs](http://stripe.com/docs).

{% callout type="check" %}
Markdoc is open-source—check out its [source](http://github.com/markdoc/markdoc) to see how it works.
{% /callout %}

## How is Markdoc different? {% #custom-permalink %}

Markdoc uses a fully declarative approach to composition and flow control, where other solutions… [Read more](/docs/overview).

## Next steps
- [Install Markdoc](/docs/getting-started)
- [Explore the syntax](/docs/syntax)

## Syntax

**Bold**

_Italic_

[Official guide](https://markdoc.dev/docs/syntax)

![spiral](/images/250204-markdoc-syntax/spiral.jpg)

{% figure
  src="/images/250204-markdoc-syntax/spiral.jpg"
  alt="Astro Logo"
  width="500"
  height="500"
  caption="A spiral"
/%}

Lists
- Item A
- Item B
  - Item a
  - Item b
  - Item c
- Item C
  1. Item 1
  2. Item 2
  3. Item 3

{% table %}
- th
- th
---
- td
- td
- td  
  second line
{% /table %}

> Quotes

`Inline code`

```ts
import {LitElement, html, customElement, property} from 'lit-element';

const style = /* css */`
  .foo {
    display: block;
    border: 1px solid black;
    padding: 16px;
    max-width: 800px;
    margin: 0 auto;
  }
`;

@customElement('my-element')
class MyElement extends LitElement {

  // Declare observed properties
  @property()
  adjective = 'awesome';

  // Define the element's template
  render() {
    return html`
      <!-- text binding -->
      <div>${this.prop1}</div>

      <!-- attribute binding -->
      <div id="${this.prop2}">attribute binding</div>

      <!-- boolean attribute binding -->
      <div>
        boolean attribute binding
        <input type="text" ?disabled="${this.prop3}"/>
      </div>

      <!-- property binding -->
      <div>
        property binding
        <input type="text" .value="${this.prop4}"/>
      </div>

      <!-- event handler binding -->
      <div>event handler binding
        <button @click="${this.clickHandler}">click</button>
      </div>
    `;
  }
}
```
