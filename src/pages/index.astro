---
import { getCollection } from "astro:content"
import BaseLayout from "@/layouts/BaseLayout.astro"

// head
const title = "Giban Demo"
const description = "Welcome to the demo page"
const { href: url } = Astro.url

// content
const allPosts = await getCollection("all")
const recent = allPosts
	.sort(
		({ data: { date: dateA } }, { data: { date: dateB } }) =>
			dateB.valueOf() - dateA.valueOf(),
	)
	.slice(0, 5)

// tags
const tags = allPosts.reduce((acc, v) => {
	v.data.tags.forEach(tag => {
		if (Object.hasOwn(acc, tag)) {
			acc[tag] += 1
		} else {
			acc[tag] = 1
		}
	})
	return acc
}, {} as Record<string, number>)

function getDateString(date: Date) {
	const y = date.getFullYear()
	const m = date.getMonth().toString().padStart(2, "0")
	const d = date.getDate().toString().padStart(2, "0")
	return `${y}.${m}.${d}`
}

---

<BaseLayout {title} {description} {url}>
	<main>
		<h1>{title}</h1>
		<h2>Recent Posts</h2>
		<ul>
			{
				recent
					.map(({ id, data: { title, date } }) => (
						<li>
							<a href={`/${id}`}>{title}</a>
							<span>&nbsp;/ {getDateString(date)}</span>
						</li>
					))
			}
		</ul>

		<h2>Tags</h2>
		<ul>
			{
				Object.entries(tags).map(([k, v]) => (
					<li>#{k} ({v})</li>
				))
			}
		</ul>
	</main>
</BaseLayout>
