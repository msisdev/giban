---
import { getCollection } from "astro:content"
import BaseLayout from "@/layouts/BaseLayout.astro"
import paths from "@/config/paths"
import PostCard from "@/components/ui/PostCard.astro"

// head
const title = "Giban"
const description = "Welcome to the demo page"
const { href: url } = Astro.url

// content
const blogs = (await getCollection("blog")).filter(v => v.data.publish)
const recent = blogs
	.sort(
		({ data: { date: dateA } }, { data: { date: dateB } }) =>
			dateB.valueOf() - dateA.valueOf(),
	)
	.slice(0, 5)

// tags
const tags = blogs.reduce((acc, v) => {
	v.data.tags.forEach(tag => {
		if (Object.hasOwn(acc, tag)) {
			acc[tag] += 1
		} else {
			acc[tag] = 1
		}
	})
	return acc
}, {} as Record<string, number>)

---

<BaseLayout {title} {description} {url}>
	<main>
		<section>
			<h2>Recent Posts</h2>
			<ul>
				{
					recent
						.map(({ id, data: { title, description, date } }) => (
							<li>
								<PostCard href={paths.blogDetail(id)} {title} {description} {date} />
							</li>
						))
				}
			</ul>
		</section>

		<section>
			<h2>Tags</h2>
			<ul>
				{
					Object.entries(tags).map(([tag, v]) => (
						<li>
							<p><a href={paths.tagPosts(tag)}>#{tag}</a> ({v})</p>
						</li>
					))
				}
			</ul>
		</section>
	</main>
</BaseLayout>
