---
import type { GetStaticPaths } from "astro"
import { getCollection, type CollectionEntry } from "astro:content"
import BaseLayout from "@/layouts/BaseLayout.astro"
import PostCard from "@/components/ui/PostCard.astro"
import paths from "@/config/paths"

type Bucket = CollectionEntry<"blog">[]

export const getStaticPaths = (async () => {
  // choose collection to display
  const blogs = (await getCollection("blog"))
    .filter(v => v.data.publish)
    .sort(
      ({ data: { date: dateA } }, { data: { date: dateB } }) =>
        dateB.valueOf() - dateA.valueOf(),
    )
  
  // A post can have multiple tags. 
  const buckets = blogs.reduce((map, post) => {
    for (const tag of post.data.tags) {
      const find = map.get(tag)
      if (find) {
        find.push(post)
      } else {
        map.set(tag, [post])
      }
    }
    return map
  }, new Map<string, Bucket>())
  
  // provide information for each page
  return Array.from(buckets.entries()).map(([tag, bucket]) => ({
    params: { slug: tag },
    props: {
      entries: bucket
    }
  }))
}) satisfies GetStaticPaths

// params, props
const tag = Astro.params.slug
const { entries } = Astro.props
const total = entries.length

// head
const title = "Tags"
const description = `Posts with #${tag}`

---
<BaseLayout {title} {description}>
  <main>
    <h2>#{tag}</h2>
    <p>{total} posts</p>
    <ol>
      {
        entries.map(({ id, data: { title, description, date }}) => (
          <li>
            <PostCard
              href={paths.blogDetail(id)}
              {title} {description} {date}
            />
          </li>
        ))
      }
    </ol>
  </main>
</BaseLayout>
