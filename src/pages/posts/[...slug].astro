---
import type { GetStaticPaths } from "astro"
import BaseLayout from "@/layouts/BaseLayout.astro"
import { getCollection } from "astro:content"
import PostCard from "@/components/ui/PostCard.astro"

export const getStaticPaths = (async () => {
  const size = 10

  const all = (await getCollection("all"))
    .filter(v => v.data.publish)
    
  const length = all.length

  // chunk entries
  const chunks = []
  for (let i = 0; i < length; i += size) {
    chunks.push(all.slice(i, Math.min(i + size, length)))
  }

  return chunks.map((chunk, page) => ({
    params: {
      slug: page == 0 ? "" : page
    },
    props: {
      entries: chunk.sort(
        ({ data: { date: dateA } }, { data: { date: dateB } }) =>
          dateB.valueOf() - dateA.valueOf(),
      ),
      size,
      total: length,
    }
  }))
}) satisfies GetStaticPaths

// params, props
const page = Astro.params.slug
const { entries, size, total, } = Astro.props
const maxPage = Math.floor(total / size)

// head
const title = "Posts | Giban"
const description = `All posts`
const { href: url } = Astro.url
---

<BaseLayout {url} {title} {description}>
  <main>
    <h2>All Posts</h2>
    <p>total {total} posts</p>
    <section>
      <ol>
        {
          entries.map((entry) => (
            <li>
              <PostCard
                href={"/" + entry.id}
                title={entry.data.title}
                description={entry.data.description}
                date={entry.data.date}
              />
            </li>
          ))
        }
      </ol>
    </section>

    <section>
      {0 < Number(page)
        ? <a>Prev</a>
        : null}
      {Number(page) < maxPage
        ? <a>Next</a>
        : null}
    </section>
  </main>
</BaseLayout>
