---
import paths from '@/config/paths'
import type { MarkdownHeading } from 'astro'
import { Icon } from 'astro-icon/components'
import { css } from 'styled-system/css'
import { flex } from 'styled-system/patterns'

interface Props {
  className?: string
  title: string
  tags: string[]
  headings: MarkdownHeading[]
  readingTime: number
}

const { className, title, tags, headings, readingTime } = Astro.props

const root = css({
  h: "fit-content",
  bg: "bg.50",
  borderRadius: "box",
  p: 4,
})

const root__headings = css({
  listStyleType: "disc",

  "& li": {
    ml: 4,
    mb: 1,
  },

  "& a": {
    display: "block",
    w: "full",
  },
})

const root__tags = flex({
  gap: 4,
})
---

<aside class={`${root} ${className}`}>
  <section>
    <p><strong>Overview</strong></p>

    <!-- Headings -->
    <ul class={root__headings}>
      {
        headings
          .filter(v => v.text.trim().length > 0 && v.depth == 2)
          .map(v => (
            <li>
              <a href={"#" + v.slug}>{v.text}</a>
            </li>
          ))
      }
    </ul>
  </section>

  <!-- Tags -->
  <ul class={root__tags}>
    {
      tags.map(tag => (
        <li>
          <a href={paths.tagPosts(tag)}>#{tag}</a>
        </li>
      ))
    }
  </ul>
  
</aside>

<script>
  const scrollToTopBtn = document.getElementById("scroll-to-top-btn")
  if (scrollToTopBtn) {
    scrollToTopBtn.addEventListener("click", () => {
      window.scrollTo({ top: 0, behavior: "smooth" })
    })
  }
</script>
